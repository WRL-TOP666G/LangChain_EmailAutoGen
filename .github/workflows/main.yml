name: FastAPI CI/CD

on:
  # Trigger the workflow on push
jobs:
  push:
    branches:
      # Push events on main branch
      - main

# The Job defines a series of steps that execute on the same runner.
jobs:
  # Define the runner used in the workflow
  runs-on: ubuntu-latest
    steps:
    # Check out repo so our workflow can access it
    - uses: actions/checkout@v2

    # Step-1 Setup Python
    - name: Set up Python
    # This action sets up a Python environment for use in actions
      uses: actions/setup-python@v2
      with:
        python-vserion: 3.11
        #optional: architecture: x64 or x86. Defaults to x64 
    # Step-2 Install Python Virtua ENV
    - name: Install Python Virtaul ENV
      run: pip3 install virtualenv

    # Step-3 Setup Virtual ENV
    - name: Virtual ENV
      uses: actions/cache@v2
      id: cache-venv # name for referring later
      with: 
        path: venv # what we cache: the Virtual ENV
        # The cache key depends on requirements.txt
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: /
          ${{ runner.os }}-venv-

    # Step-4 Build a Virtaul ENV, but only if it doesn't already exist
    - name: Activate Virtual ENV
      run: python -m venv venv && source venv/bin/activated && pip3 install -r requirements.txt
      if: steps.cache-venv.outputs.cache-hit != 'true'


